{"version":3,"file":"index.es.js","sources":["../lib/create-context.tsx"],"sourcesContent":["import React from \"react\";\n\nconst NullCtx: unique symbol = Symbol(\"NULL_CTX\");\n\nexport class ContextError extends Error {}\n\nexport function createContext<C = any>(p: { errorMsg?: string; initialValue?: C; initializer: () => C;}): \n  [React.Context<C | typeof NullCtx>, () => C, (p: React.PropsWithChildren) => JSX.Element];\n\nexport function createContext<C = any>(p?: { errorMsg?: string; initialValue?: C; initializer?: never }): \n  [React.Context<C | typeof NullCtx>, () => C, (p: React.PropsWithChildren<{ value: C }>) => JSX.Element];\n\nexport function createContext<C = any>(p) {\n  const context = React.createContext<C | typeof NullCtx>(p?.initialValue || NullCtx);\n  const hook = () => {\n    const value = React.useContext(context);\n    if (value === NullCtx) throw new ContextError(p?.errorMsg ?? \"cannot use context outside provider\");\n    return value;\n  };\n  const Provider = (p && p.initializer != undefined) \n    ? ({ children }: React.PropsWithChildren) => <context.Provider value={p.initializer()}>{children}</context.Provider>\n    : ({ value, children }: React.PropsWithChildren<{ value: C }>) => <context.Provider value={value}>{children}</context.Provider> \n  return [context, hook, Provider];\n}"],"names":["NullCtx","ContextError","createContext","p","context","React","hook","value","Provider","children","jsx"],"mappings":";;AAEA,MAAMA,IAAyB,OAAO,UAAU;AAEzC,MAAMC,UAAqB,MAAM;AAAC;AAQlC,SAASC,EAAuBC,GAAG;AACxC,QAAMC,IAAUC,EAAM,cAAkCF,GAAG,gBAAgBH,CAAO,GAC5EM,IAAO,MAAM;AACjB,UAAMC,IAAQF,EAAM,WAAWD,CAAO;AACtC,QAAIG,MAAUP,EAAS,OAAM,IAAIC,EAAaE,GAAG,YAAY,qCAAqC;AAClG,WAAOI;AAAA,EACT,GACMC,IAAYL,KAAKA,EAAE,eAAe,OACpC,CAAC,EAAE,UAAAM,EAAA,MAAwC,gBAAAC,EAACN,EAAQ,UAAR,EAAiB,OAAOD,EAAE,YAAA,GAAgB,UAAAM,EAAA,CAAS,IAC/F,CAAC,EAAE,OAAAF,GAAO,UAAAE,EAAA,MAAsD,gBAAAC,EAACN,EAAQ,UAAR,EAAiB,OAAAG,GAAe,UAAAE,EAAA,CAAS;AAC9G,SAAO,CAACL,GAASE,GAAME,CAAQ;AACjC;"}